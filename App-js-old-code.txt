// Add Cloudinary


const upload = require("../utils/uploadPhoto"); // Import the upload logic
const User = require("../models/userModel");
const cloudinary = require("cloudinary").v2;
const fs = require("fs"); // Ensure you import fs for other file operations

cloudinary.config({
  cloud_name: "your-cloud-name",
  api_key: "your-api-key",
  api_secret: "your-api-secret",
});

// Route handler for uploading photo
const uploadPhoto = async (req, res) => {
  // First, use the multer upload middleware to handle the upload
  upload(req, res, async (err) => {
    if (err) {
      return res.status(400).json({ message: err });
    }

    if (!req.file) {
      return res.status(400).json({ message: "Please upload a file." });
    }

    const userId = req.user.id; // Ensure user is authenticated and you have the user's ID

    try {
      // Upload the image to Cloudinary
      const result = await cloudinary.uploader.upload(req.file.path);
      const photoUrl = result.secure_url; // URL to the uploaded image

      // Save the photo URL to the user document
      const user = await User.findByIdAndUpdate(
        userId,
        { photo: photoUrl }, // Update the photo field with Cloudinary URL
        { new: true }
      );

      // Delete the file from the local storage after uploading to Cloudinary
      fs.unlinkSync(req.file.path); // Clean up the uploaded file

      return res.status(200).json({
        status: "success",
        message: "Profile photo uploaded successfully",
        data: user,
      });
    } catch (error) {
      return res.status(500).json({
        status: "error",
        message: error.message,
      });
    }
  });
};

module.exports = {
  uploadPhoto,
};
